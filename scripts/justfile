# LeetCode Test Script Management

# Load .env file
set dotenv-load

# Set up the script environment
setup:
    python3 -m venv .venv
    .venv/bin/pip install -r ./requirements.txt
    @echo "‚úÖ Setup complete! Run 'just status' to check configuration"

# Check script status and configuration
status:
    #!/usr/bin/env bash
    echo "üìä LeetCode Script Status Check"
    echo "==============================="
    echo ""

    # Check virtual environment
    if [ -d ".venv" ]; then
        echo "‚úÖ Virtual environment: Ready"
    else
        echo "‚ùå Virtual environment: Missing (run 'just setup')"
    fi
    echo ""

    # Check Arc cookies
    echo "üç™ Arc Browser Cookies:"
    arc_default="$HOME/Library/Application Support/Arc/User Data/Default/Cookies"
    arc_profile1="$HOME/Library/Application Support/Arc/User Data/Profile 1/Cookies"

    if [ -f "$arc_default" ]; then
        echo "‚úÖ Default profile cookies found"
        echo "   Last modified: $(stat -f "%Sm" "$arc_default")"
    elif [ -f "$arc_profile1" ]; then
        echo "‚úÖ Profile 1 cookies found"
        echo "   Last modified: $(stat -f "%Sm" "$arc_profile1")"
    else
        echo "‚ùå Arc cookies not found"
        echo "   Make sure Arc is installed and you've browsed some websites"
        echo "   Expected: $arc_default"
    fi
    echo ""

    # Check environment variables
    echo "üîë Environment Variables:"

    if [ -n "${TO_EMAIL:-}" ]; then
        echo "‚úÖ TO_EMAIL: $TO_EMAIL"
    else
        echo "‚ùå TO_EMAIL: Not set"
        echo "   This is your personal email where notifications are sent"
        echo "   Example: TO_EMAIL=your.email@gmail.com"
    fi

    if [ -n "${GMAIL_BOT_EMAIL_ADDRESS:-}" ]; then
        echo "‚úÖ GMAIL_BOT_EMAIL_ADDRESS: $GMAIL_BOT_EMAIL_ADDRESS"
    else
        echo "‚ùå GMAIL_BOT_EMAIL_ADDRESS: Not set"
        echo "   This is the Gmail account you choose to send the notifications"
        echo "   Example: GMAIL_BOT_EMAIL_ADDRESS=bot@gmail.com"
    fi

    if [ -n "${GMAIL_BOT_APP_PASSWORD:-}" ]; then
        echo "‚úÖ GMAIL_BOT_APP_PASSWORD: Configured (hidden)"
    else
        echo "‚ùå GMAIL_BOT_APP_PASSWORD: Not set"
        echo "   This is the Gmail App Password (not a regular password)"
        echo "   Example: GMAIL_BOT_APP_PASSWORD=foo"
    fi
    echo ""

    # Overall status
    if [ -d ".venv" ] && \
       ([ -f "$arc_default" ] || [ -f "$arc_profile1" ]) && \
       [ -n "${TO_EMAIL:-}" ] && \
       [ -n "${GMAIL_BOT_EMAIL_ADDRESS:-}" ] && \
       [ -n "${GMAIL_BOT_APP_PASSWORD:-}" ]; then
        echo "üéâ All systems ready! Run 'just run' to run the LeetCode GraphQL test"
    else
        echo "‚ö†Ô∏è  Some configuration missing. Fix the ‚ùå items above"
    fi

# Manually run the LeetCode GraphQL test
run:
    .venv/bin/python leetcode_graphql_test.py


CURRENT_DIR := justfile_directory()

PLIST_CONTENT := '''
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Label</key>
    <string>leetcode-graphql-test</string>
    <key>ProgramArguments</key>
    <array>
        <string>/bin/bash</string>
        <string>%s/run.sh</string>
    </array>
    <key>StartCalendarInterval</key>
    <dict>
        <key>Hour</key>
        <integer>10</integer>
        <key>Minute</key>
        <integer>30</integer>
    </dict>
</dict>
</plist>
'''

# Install LaunchAgent for scheduled execution
schedule:
    #!/usr/bin/env bash
    chmod +x run.sh
    echo "üìÖ Scheduling LeetCode GraphQL test at 10:30 AM..."
    printf '{{PLIST_CONTENT}}' '{{CURRENT_DIR}}' > ~/Library/LaunchAgents/schedule_leetcode_graphql_test.plist
    launchctl load ~/Library/LaunchAgents/schedule_leetcode_graphql_test.plist
    echo "‚úÖ Installed! Runs on a schedule now. Check logs: ~/Library/Logs/leetcode_graphql_test.log. Run 'just test-scheduler' to test the scheduler."

test-scheduler:
    launchctl start leetcode-graphql-test
    echo "‚úÖ Tested scheduler. Check logs: ~/Library/Logs/leetcode_graphql_test.log."

# Remove scheduler
unschedule:
    launchctl unload ~/Library/LaunchAgents/schedule_leetcode_graphql_test.plist 2>/dev/null || true
    rm ~/Library/LaunchAgents/schedule_leetcode_graphql_test.plist 2>/dev/null || true
    @echo "‚úÖ Removed scheduler"
